{
  "address": "0x53E4DAFF2073f848DC3F7a8D7CC95b3607212A73",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_aaveConnector",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdcToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_aUsdcToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "aUsdcToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aaveConnector",
      "outputs": [
        {
          "internalType": "contract IConnector",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "exchange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdcToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x628f3a61c4347ea5a41e9b8f7dddaca9d6f9c3d428fc91e44770d576330c7676",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x53E4DAFF2073f848DC3F7a8D7CC95b3607212A73",
    "transactionIndex": 0,
    "gasUsed": "766603",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x0e5f47b7466e71167b4b770d3af70fbd3c1364069e48d1fa9379b5d4399b08c5",
    "transactionHash": "0x628f3a61c4347ea5a41e9b8f7dddaca9d6f9c3d428fc91e44770d576330c7676",
    "logs": [],
    "blockNumber": 21675011,
    "cumulativeGasUsed": "766603",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x6712008CCD96751d586FdBa0DEf5495E0E22D904",
    "0x2791bca1f2de4661ed88a30c99a7a9449aa84174",
    "0x1a13F4Ca1d028320A707D99520AbFefca3998b7F"
  ],
  "solcInputHash": "4b2c02ad00a20f5dc92f2cdd9d4eb77f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_aaveConnector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdcToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aUsdcToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"aUsdcToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aaveConnector\",\"outputs\":[{\"internalType\":\"contract IConnector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"exchange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token_exchanges/Usdc2AUsdcTokenExchange.sol\":\"Usdc2AUsdcTokenExchange\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"contracts/interfaces/IConnector.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\n/// @title Common inrterface to DeFi protocol connectors\\n/// @author @Stanta\\n/// @notice Every connector have to implement this function\\n/// @dev Choosing of connector releasing by changing address of connector's contract\\ninterface IConnector {\\n    function stake(\\n        address _asset,\\n        uint256 _amount,\\n        address _beneficiar\\n    ) external;\\n\\n    function unstake(\\n        address _asset,\\n        uint256 _amount,\\n        address _to\\n    ) external returns (uint256);\\n}\\n\",\"keccak256\":\"0xf418605c420c689e5cdd7cf9a49d8906f8c5631a629a5d6eea6d9f2eba79fdb8\",\"license\":\"MIT\"},\"contracts/interfaces/ITokenExchange.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface ITokenExchange {\\n\\n    function exchange(\\n        address spender,\\n        IERC20 from,\\n        address receiver,\\n        IERC20 to,\\n        uint256 amount\\n    ) external;\\n\\n}\\n\",\"keccak256\":\"0x5b882bdf0c53f3ad4e7a281ad884af921b2c7ff16517bf56e50f253fc58b5bbc\",\"license\":\"GPL-3.0\"},\"contracts/token_exchanges/Usdc2AUsdcTokenExchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"../interfaces/ITokenExchange.sol\\\";\\nimport \\\"../interfaces/IConnector.sol\\\";\\n\\ncontract Usdc2AUsdcTokenExchange is ITokenExchange {\\n    IConnector public aaveConnector;\\n    IERC20 public usdcToken;\\n    IERC20 public aUsdcToken;\\n\\n    constructor(\\n        address _aaveConnector,\\n        address _usdcToken,\\n        address _aUsdcToken\\n    ) {\\n        require(_aaveConnector != address(0), \\\"Zero address not allowed\\\");\\n        require(_usdcToken != address(0), \\\"Zero address not allowed\\\");\\n        require(_aUsdcToken != address(0), \\\"Zero address not allowed\\\");\\n\\n        aaveConnector = IConnector(_aaveConnector);\\n        usdcToken = IERC20(_usdcToken);\\n        aUsdcToken = IERC20(_aUsdcToken);\\n    }\\n\\n    function exchange(\\n        address spender,\\n        IERC20 from,\\n        address receiver,\\n        IERC20 to,\\n        uint256 amount\\n    ) external override {\\n        require(\\n            (from == usdcToken && to == aUsdcToken) || (from == aUsdcToken && to == usdcToken),\\n            \\\"Usdc2AUsdcTokenExchange: Some token not compatible\\\"\\n        );\\n\\n        if (amount == 0) {\\n            from.transfer(spender, from.balanceOf(address(this)));\\n            return;\\n        }\\n\\n        if (from == usdcToken && to == aUsdcToken) {\\n            //TODO: denominator usage\\n            uint256 denominator = 10**(18 - IERC20Metadata(address(usdcToken)).decimals());\\n            amount = amount / denominator;\\n\\n            require(\\n                usdcToken.balanceOf(address(this)) >= amount,\\n                \\\"Usdc2AUsdcTokenExchange: Not enough usdcToken\\\"\\n            );\\n\\n            // check after denormilization\\n            if (amount == 0) {\\n                from.transfer(spender, from.balanceOf(address(this)));\\n                return;\\n            }\\n\\n            usdcToken.transfer(address(aaveConnector), amount);\\n            aaveConnector.stake(address(usdcToken), amount, receiver);\\n        } else {\\n            //TODO: denominator usage\\n            uint256 denominator = 10**(18 - IERC20Metadata(address(aUsdcToken)).decimals());\\n            amount = amount / denominator;\\n\\n            require(\\n                aUsdcToken.balanceOf(address(this)) >= amount,\\n                \\\"Usdc2AUsdcTokenExchange: Not enough aUsdcToken\\\"\\n            );\\n\\n            // check after denormilization\\n            if (amount == 0) {\\n                from.transfer(spender, from.balanceOf(address(this)));\\n                return;\\n            }\\n\\n            aUsdcToken.transfer(address(aaveConnector), amount);\\n            uint256 withdrewAmount = aaveConnector.unstake(address(usdcToken), amount, receiver);\\n\\n            //TODO: may be add some checks for withdrewAmount\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe61f82e5455aa2f331d611b0795272741c5dca74e0a3439d48d802f28d6949d6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610d5e380380610d5e83398101604081905261002f9161015e565b6001600160a01b0383166100785760405162461bcd60e51b81526020600482015260186024820152600080516020610d3e83398151915260448201526064015b60405180910390fd5b6001600160a01b0382166100bc5760405162461bcd60e51b81526020600482015260186024820152600080516020610d3e833981519152604482015260640161006f565b6001600160a01b0381166101005760405162461bcd60e51b81526020600482015260186024820152600080516020610d3e833981519152604482015260640161006f565b600080546001600160a01b039485166001600160a01b0319918216179091556001805493851693821693909317909255600280549190931691161790556101a1565b80516001600160a01b038116811461015957600080fd5b919050565b60008060006060848603121561017357600080fd5b61017c84610142565b925061018a60208501610142565b915061019860408501610142565b90509250925092565b610b8e806101b06000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806311eac8551461005157806362ac753814610080578063cc3d6cf714610095578063dbaab3d1146100a8575b600080fd5b600154610064906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61009361008e36600461092c565b6100bb565b005b600254610064906001600160a01b031681565b600054610064906001600160a01b031681565b6001546001600160a01b0385811691161480156100e557506002546001600160a01b038381169116145b8061011557506002546001600160a01b03858116911614801561011557506001546001600160a01b038381169116145b6101815760405162461bcd60e51b815260206004820152603260248201527f55736463324155736463546f6b656e45786368616e67653a20536f6d6520746f6044820152716b656e206e6f7420636f6d70617469626c6560701b60648201526084015b60405180910390fd5b8061028b576040516370a0823160e01b81523060048201526001600160a01b0385169063a9059cbb90879083906370a082319060240160206040518083038186803b1580156101cf57600080fd5b505afa1580156101e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020791906109b9565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561024d57600080fd5b505af1158015610261573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102859190610990565b50610925565b6001546001600160a01b0385811691161480156102b557506002546001600160a01b038381169116145b15610648576001546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b1580156102ff57600080fd5b505afa158015610313573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033791906109d2565b610342906012610b07565b61034d90600a610a5a565b905061035981836109f5565b6001546040516370a0823160e01b815230600482015291935083916001600160a01b03909116906370a082319060240160206040518083038186803b1580156103a157600080fd5b505afa1580156103b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d991906109b9565b101561043d5760405162461bcd60e51b815260206004820152602d60248201527f55736463324155736463546f6b656e45786368616e67653a204e6f7420656e6f60448201526c3ab3b4103ab9b231aa37b5b2b760991b6064820152608401610178565b81610549576040516370a0823160e01b81523060048201526001600160a01b0386169063a9059cbb90889083906370a08231906024015b60206040518083038186803b15801561048c57600080fd5b505afa1580156104a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c491906109b9565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561050a57600080fd5b505af115801561051e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105429190610990565b5050610925565b60015460005460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb90604401602060405180830381600087803b15801561059957600080fd5b505af11580156105ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d19190610990565b5060005460015460405163294091cd60e01b81526001600160a01b03918216600482015260248101859052868216604482015291169063294091cd90606401600060405180830381600087803b15801561062a57600080fd5b505af115801561063e573d6000803e3d6000fd5b5050505050610925565b6002546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561068d57600080fd5b505afa1580156106a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c591906109d2565b6106d0906012610b07565b6106db90600a610a5a565b90506106e781836109f5565b6002546040516370a0823160e01b815230600482015291935083916001600160a01b03909116906370a082319060240160206040518083038186803b15801561072f57600080fd5b505afa158015610743573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076791906109b9565b10156107cc5760405162461bcd60e51b815260206004820152602e60248201527f55736463324155736463546f6b656e45786368616e67653a204e6f7420656e6f60448201526d3ab3b41030aab9b231aa37b5b2b760911b6064820152608401610178565b81610807576040516370a0823160e01b81523060048201526001600160a01b0386169063a9059cbb90889083906370a0823190602401610474565b60025460005460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb90604401602060405180830381600087803b15801561085757600080fd5b505af115801561086b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088f9190610990565b506000805460015460405163493718eb60e11b81526001600160a01b03918216600482015260248101869052878216604482015291169063926e31d690606401602060405180830381600087803b1580156108e957600080fd5b505af11580156108fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092191906109b9565b5050505b5050505050565b600080600080600060a0868803121561094457600080fd5b853561094f81610b40565b9450602086013561095f81610b40565b9350604086013561096f81610b40565b9250606086013561097f81610b40565b949793965091946080013592915050565b6000602082840312156109a257600080fd5b815180151581146109b257600080fd5b9392505050565b6000602082840312156109cb57600080fd5b5051919050565b6000602082840312156109e457600080fd5b815160ff811681146109b257600080fd5b600082610a1257634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115610a52578160001904821115610a3857610a38610b2a565b80851615610a4557918102915b93841c9390800290610a1c565b509250929050565b60006109b260ff841683600082610a7357506001610b01565b81610a8057506000610b01565b8160018114610a965760028114610aa057610abc565b6001915050610b01565b60ff841115610ab157610ab1610b2a565b50506001821b610b01565b5060208310610133831016604e8410600b8410161715610adf575081810a610b01565b610ae98383610a17565b8060001904821115610afd57610afd610b2a565b0290505b92915050565b600060ff821660ff841680821015610b2157610b21610b2a565b90039392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610b5557600080fd5b5056fea2646970667358221220e550a29fcbecf6ef491edb3716a2edaba45af7e4736ec049d4958c3ec2ae602f64736f6c634300080600335a65726f2061646472657373206e6f7420616c6c6f7765640000000000000000",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806311eac8551461005157806362ac753814610080578063cc3d6cf714610095578063dbaab3d1146100a8575b600080fd5b600154610064906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61009361008e36600461092c565b6100bb565b005b600254610064906001600160a01b031681565b600054610064906001600160a01b031681565b6001546001600160a01b0385811691161480156100e557506002546001600160a01b038381169116145b8061011557506002546001600160a01b03858116911614801561011557506001546001600160a01b038381169116145b6101815760405162461bcd60e51b815260206004820152603260248201527f55736463324155736463546f6b656e45786368616e67653a20536f6d6520746f6044820152716b656e206e6f7420636f6d70617469626c6560701b60648201526084015b60405180910390fd5b8061028b576040516370a0823160e01b81523060048201526001600160a01b0385169063a9059cbb90879083906370a082319060240160206040518083038186803b1580156101cf57600080fd5b505afa1580156101e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020791906109b9565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561024d57600080fd5b505af1158015610261573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102859190610990565b50610925565b6001546001600160a01b0385811691161480156102b557506002546001600160a01b038381169116145b15610648576001546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b1580156102ff57600080fd5b505afa158015610313573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033791906109d2565b610342906012610b07565b61034d90600a610a5a565b905061035981836109f5565b6001546040516370a0823160e01b815230600482015291935083916001600160a01b03909116906370a082319060240160206040518083038186803b1580156103a157600080fd5b505afa1580156103b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d991906109b9565b101561043d5760405162461bcd60e51b815260206004820152602d60248201527f55736463324155736463546f6b656e45786368616e67653a204e6f7420656e6f60448201526c3ab3b4103ab9b231aa37b5b2b760991b6064820152608401610178565b81610549576040516370a0823160e01b81523060048201526001600160a01b0386169063a9059cbb90889083906370a08231906024015b60206040518083038186803b15801561048c57600080fd5b505afa1580156104a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c491906109b9565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561050a57600080fd5b505af115801561051e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105429190610990565b5050610925565b60015460005460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb90604401602060405180830381600087803b15801561059957600080fd5b505af11580156105ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d19190610990565b5060005460015460405163294091cd60e01b81526001600160a01b03918216600482015260248101859052868216604482015291169063294091cd90606401600060405180830381600087803b15801561062a57600080fd5b505af115801561063e573d6000803e3d6000fd5b5050505050610925565b6002546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561068d57600080fd5b505afa1580156106a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c591906109d2565b6106d0906012610b07565b6106db90600a610a5a565b90506106e781836109f5565b6002546040516370a0823160e01b815230600482015291935083916001600160a01b03909116906370a082319060240160206040518083038186803b15801561072f57600080fd5b505afa158015610743573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076791906109b9565b10156107cc5760405162461bcd60e51b815260206004820152602e60248201527f55736463324155736463546f6b656e45786368616e67653a204e6f7420656e6f60448201526d3ab3b41030aab9b231aa37b5b2b760911b6064820152608401610178565b81610807576040516370a0823160e01b81523060048201526001600160a01b0386169063a9059cbb90889083906370a0823190602401610474565b60025460005460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb90604401602060405180830381600087803b15801561085757600080fd5b505af115801561086b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088f9190610990565b506000805460015460405163493718eb60e11b81526001600160a01b03918216600482015260248101869052878216604482015291169063926e31d690606401602060405180830381600087803b1580156108e957600080fd5b505af11580156108fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092191906109b9565b5050505b5050505050565b600080600080600060a0868803121561094457600080fd5b853561094f81610b40565b9450602086013561095f81610b40565b9350604086013561096f81610b40565b9250606086013561097f81610b40565b949793965091946080013592915050565b6000602082840312156109a257600080fd5b815180151581146109b257600080fd5b9392505050565b6000602082840312156109cb57600080fd5b5051919050565b6000602082840312156109e457600080fd5b815160ff811681146109b257600080fd5b600082610a1257634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115610a52578160001904821115610a3857610a38610b2a565b80851615610a4557918102915b93841c9390800290610a1c565b509250929050565b60006109b260ff841683600082610a7357506001610b01565b81610a8057506000610b01565b8160018114610a965760028114610aa057610abc565b6001915050610b01565b60ff841115610ab157610ab1610b2a565b50506001821b610b01565b5060208310610133831016604e8410600b8410161715610adf575081810a610b01565b610ae98383610a17565b8060001904821115610afd57610afd610b2a565b0290505b92915050565b600060ff821660ff841680821015610b2157610b21610b2a565b90039392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610b5557600080fd5b5056fea2646970667358221220e550a29fcbecf6ef491edb3716a2edaba45af7e4736ec049d4958c3ec2ae602f64736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12204,
        "contract": "contracts/token_exchanges/Usdc2AUsdcTokenExchange.sol:Usdc2AUsdcTokenExchange",
        "label": "aaveConnector",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IConnector)9799"
      },
      {
        "astId": 12207,
        "contract": "contracts/token_exchanges/Usdc2AUsdcTokenExchange.sol:Usdc2AUsdcTokenExchange",
        "label": "usdcToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)1095"
      },
      {
        "astId": 12210,
        "contract": "contracts/token_exchanges/Usdc2AUsdcTokenExchange.sol:Usdc2AUsdcTokenExchange",
        "label": "aUsdcToken",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)1095"
      }
    ],
    "types": {
      "t_contract(IConnector)9799": {
        "encoding": "inplace",
        "label": "contract IConnector",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)1095": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      }
    }
  }
}