{
  "address": "0x082219A213a05B6fFe2a2C85d99445e88E5a7402",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_swapRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdcToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wMaticToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "exchange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdcToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wMaticToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x5e8cd6a191401950f275d9e3c039cf535a2d6201da2db6a09477f0773fecd41e",
  "receipt": {
    "to": null,
    "from": "0x5CB01385d3097b6a189d1ac8BA3364D900666445",
    "contractAddress": "0x082219A213a05B6fFe2a2C85d99445e88E5a7402",
    "transactionIndex": 54,
    "gasUsed": "875422",
    "logsBloom": "0x
    "blockHash": "0xda54a216b14f233e424b75e97ced999f7bf48a6fe17c4db9f0caa723a0351a9d",
    "transactionHash": "0x5e8cd6a191401950f275d9e3c039cf535a2d6201da2db6a09477f0773fecd41e",
    "logs": [
      {
        "transactionIndex": 54,
        "blockNumber": 21746852,
        "transactionHash": "0x5e8cd6a191401950f275d9e3c039cf535a2d6201da2db6a09477f0773fecd41e",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005cb01385d3097b6a189d1ac8ba3364d900666445",
          "0x0000000000000000000000007b5000af8ab69fd59eb0d4f5762bff57c9c04385"
        ],
        "data": "0x000000000000000000000000000000000000000000000000005d4dc008282800000000000000000000000000000000000000000000000000f80379bed5902180000000000000000000000000000000000000000000008019869399baf2de1479000000000000000000000000000000000000000000000000f7a62bfecd67f98000000000000000000000000000000000000000000000801986f0e77afb063c79",
        "logIndex": 523,
        "blockHash": "0xda54a216b14f233e424b75e97ced999f7bf48a6fe17c4db9f0caa723a0351a9d"
      }
    ],
    "blockNumber": 21746852,
    "cumulativeGasUsed": "13085673",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xa5e0829caced8ffdd4de3c43696c57f7d7a678ff",
    "0x2791bca1f2de4661ed88a30c99a7a9449aa84174",
    "0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"
  ],
  "solcInputHash": "4b2c02ad00a20f5dc92f2cdd9d4eb77f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_swapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdcToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wMaticToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"exchange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wMaticToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token_exchanges/WMatic2UsdcTokenExchange.sol\":\"WMatic2UsdcTokenExchange\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"contracts/connectors/swaps/interfaces/IUniswapV2Router01.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    \\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n \\n\\n}\\n\",\"keccak256\":\"0xbb39ec76d795136f5b13485e889d211527ae5af119ab32699337ed793b1d84f7\"},\"contracts/connectors/swaps/interfaces/IUniswapV2Router02.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\nimport './IUniswapV2Router01.sol';\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountETH);\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountETH);\\n    \\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable;\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n\\n    function pairFor(address factoryC, address tokenA, address tokenB) external view returns (address pair) ;\\n\\n}\\n\",\"keccak256\":\"0xdcd670f2feb6b5541bd0666675369b1fe2808c9a0ab10b88a7e0b487c156a856\"},\"contracts/interfaces/ITokenExchange.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface ITokenExchange {\\n\\n    function exchange(\\n        address spender,\\n        IERC20 from,\\n        address receiver,\\n        IERC20 to,\\n        uint256 amount\\n    ) external;\\n\\n}\\n\",\"keccak256\":\"0x5b882bdf0c53f3ad4e7a281ad884af921b2c7ff16517bf56e50f253fc58b5bbc\",\"license\":\"GPL-3.0\"},\"contracts/token_exchanges/WMatic2UsdcTokenExchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"../interfaces/ITokenExchange.sol\\\";\\nimport \\\"../connectors/swaps/interfaces/IUniswapV2Router02.sol\\\";\\n\\ncontract WMatic2UsdcTokenExchange is ITokenExchange {\\n    IUniswapV2Router02 public swapRouter;\\n    IERC20 public usdcToken;\\n    IERC20 public wMaticToken;\\n\\n    constructor(\\n        address _swapRouter,\\n        address _usdcToken,\\n        address _wMaticToken\\n    ) {\\n        require(_swapRouter != address(0), \\\"Zero address not allowed\\\");\\n        require(_usdcToken != address(0), \\\"Zero address not allowed\\\");\\n        require(_wMaticToken != address(0), \\\"Zero address not allowed\\\");\\n\\n        swapRouter = IUniswapV2Router02(_swapRouter);\\n        usdcToken = IERC20(_usdcToken);\\n        wMaticToken = IERC20(_wMaticToken);\\n    }\\n\\n    function exchange(\\n        address spender,\\n        IERC20 from,\\n        address receiver,\\n        IERC20 to,\\n        uint256 amount\\n    ) external override {\\n        require(\\n            (from == usdcToken && to == wMaticToken) || (from == wMaticToken && to == usdcToken),\\n            \\\"WMatic2UsdcTokenExchange: Some token not compatible\\\"\\n        );\\n\\n        if (amount == 0) {\\n            from.transfer(spender, from.balanceOf(address(this)));\\n            return;\\n        }\\n\\n        if (from == usdcToken && to == wMaticToken) {\\n            revert(\\\"WMatic2UsdcTokenExchange: Allowed only exchange wMatic to USDC\\\");\\n        } else {\\n            //TODO: denominator usage\\n            uint256 denominator = 10**(18 - IERC20Metadata(address(wMaticToken)).decimals());\\n            amount = amount / denominator;\\n\\n            require(\\n                wMaticToken.balanceOf(address(this)) >= amount,\\n                \\\"WMatic2UsdcTokenExchange: Not enough wMaticToken\\\"\\n            );\\n\\n            // check after denormilization\\n            if (amount == 0) {\\n                from.transfer(spender, from.balanceOf(address(this)));\\n                return;\\n            }\\n\\n            address[] memory path = new address[](2);\\n            path[0] = address(wMaticToken);\\n            path[1] = address(usdcToken);\\n\\n            uint[] memory amountsOut = swapRouter.getAmountsOut(amount, path);\\n            // 6 + 18 - 18 = 6 - not normilized USDC in native 6 decimals\\n            uint256 estimateUsdcOut = (amountsOut[1] * (10**18)) / amountsOut[0];\\n            // skip exchange if estimate USDC less than 3 shares to prevent INSUFFICIENT_OUTPUT_AMOUNT error\\n            // TODO: may be enough 2 or insert check ratio IN/OUT to make decision\\n            if (estimateUsdcOut < 3) {\\n                from.transfer(spender, from.balanceOf(address(this)));\\n                return;\\n            }\\n\\n            wMaticToken.approve(address(swapRouter), amount);\\n\\n            // TODO: use some calculation or Oracle call instead of usage '0' as amountOutMin\\n            swapRouter.swapExactTokensForTokens(\\n                amount, //    uint amountIn,\\n                0, //          uint amountOutMin,\\n                path,\\n                receiver,\\n                block.timestamp + 600 // 10 mins\\n            );\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf3515b2f7883a5f99d8a83247268dbe825d4f10fc00b104cea938b201d325665\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000f6d38038062000f6d83398101604081905262000034916200016d565b6001600160a01b0383166200007f5760405162461bcd60e51b8152602060048201526018602482015260008051602062000f4d83398151915260448201526064015b60405180910390fd5b6001600160a01b038216620000c65760405162461bcd60e51b8152602060048201526018602482015260008051602062000f4d833981519152604482015260640162000076565b6001600160a01b0381166200010d5760405162461bcd60e51b8152602060048201526018602482015260008051602062000f4d833981519152604482015260640162000076565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620001b7565b80516001600160a01b03811681146200016857600080fd5b919050565b6000806000606084860312156200018357600080fd5b6200018e8462000150565b92506200019e6020850162000150565b9150620001ae6040850162000150565b90509250925092565b610d8680620001c76000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806311eac8551461005157806362ac753814610080578063c31c9c0714610095578063d72887f5146100a8575b600080fd5b600154610064906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61009361008e36600461095b565b6100bb565b005b600054610064906001600160a01b031681565b600254610064906001600160a01b031681565b6001546001600160a01b0385811691161480156100e557506002546001600160a01b038381169116145b8061011557506002546001600160a01b03858116911614801561011557506001546001600160a01b038381169116145b6101825760405162461bcd60e51b815260206004820152603360248201527f574d617469633255736463546f6b656e45786368616e67653a20536f6d6520746044820152726f6b656e206e6f7420636f6d70617469626c6560681b60648201526084015b60405180910390fd5b8061028c576040516370a0823160e01b81523060048201526001600160a01b0385169063a9059cbb90879083906370a082319060240160206040518083038186803b1580156101d057600080fd5b505afa1580156101e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102089190610aad565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561024e57600080fd5b505af1158015610262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102869190610a84565b50610954565b6001546001600160a01b0385811691161480156102b657506002546001600160a01b038381169116145b156103295760405162461bcd60e51b815260206004820152603e60248201527f574d617469633255736463546f6b656e45786368616e67653a20416c6c6f776560448201527f64206f6e6c792065786368616e676520774d6174696320746f205553444300006064820152608401610179565b6002546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561036e57600080fd5b505afa158015610382573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a69190610ac6565b6103b1906012610cd3565b6103bc90600a610c07565b90506103c88183610ba2565b6002546040516370a0823160e01b815230600482015291935083916001600160a01b03909116906370a082319060240160206040518083038186803b15801561041057600080fd5b505afa158015610424573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104489190610aad565b10156104af5760405162461bcd60e51b815260206004820152603060248201527f574d617469633255736463546f6b656e45786368616e67653a204e6f7420656e60448201526f37bab3b4103ba6b0ba34b1aa37b5b2b760811b6064820152608401610179565b816105ba576040516370a0823160e01b81523060048201526001600160a01b0386169063a9059cbb90889083906370a082319060240160206040518083038186803b1580156104fd57600080fd5b505afa158015610511573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105359190610aad565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561057b57600080fd5b505af115801561058f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b39190610a84565b5050610954565b604080516002808252606082018352600092602083019080368337505060025482519293506001600160a01b0316918391506000906105fb576105fb610d0c565b6001600160a01b039283166020918202929092010152600180548351921691839190811061062b5761062b610d0c565b6001600160a01b0392831660209182029290920101526000805460405163d06ca61f60e01b81529192169063d06ca61f9061066c9087908690600401610b2d565b60006040518083038186803b15801561068457600080fd5b505afa158015610698573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106c091908101906109bf565b90506000816000815181106106d7576106d7610d0c565b6020026020010151826001815181106106f2576106f2610d0c565b6020026020010151670de0b6b3a764000061070d9190610cb4565b6107179190610ba2565b9050600381101561082b576040516370a0823160e01b81523060048201526001600160a01b0389169063a9059cbb908b9083906370a082319060240160206040518083038186803b15801561076b57600080fd5b505afa15801561077f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a39190610aad565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156107e957600080fd5b505af11580156107fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108219190610a84565b5050505050610954565b60025460005460405163095ea7b360e01b81526001600160a01b0391821660048201526024810188905291169063095ea7b390604401602060405180830381600087803b15801561087b57600080fd5b505af115801561088f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b39190610a84565b50600080546001600160a01b0316906338ed1739908790868b6108d842610258610b8a565b6040518663ffffffff1660e01b81526004016108f8959493929190610b4e565b600060405180830381600087803b15801561091257600080fd5b505af1158015610926573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261094e91908101906109bf565b50505050505b5050505050565b600080600080600060a0868803121561097357600080fd5b853561097e81610d38565b9450602086013561098e81610d38565b9350604086013561099e81610d38565b925060608601356109ae81610d38565b949793965091946080013592915050565b600060208083850312156109d257600080fd5b825167ffffffffffffffff808211156109ea57600080fd5b818501915085601f8301126109fe57600080fd5b815181811115610a1057610a10610d22565b8060051b604051601f19603f83011681018181108582111715610a3557610a35610d22565b604052828152858101935084860182860187018a1015610a5457600080fd5b600095505b83861015610a77578051855260019590950194938601938601610a59565b5098975050505050505050565b600060208284031215610a9657600080fd5b81518015158114610aa657600080fd5b9392505050565b600060208284031215610abf57600080fd5b5051919050565b600060208284031215610ad857600080fd5b815160ff81168114610aa657600080fd5b600081518084526020808501945080840160005b83811015610b225781516001600160a01b031687529582019590820190600101610afd565b509495945050505050565b828152604060208201526000610b466040830184610ae9565b949350505050565b85815284602082015260a060408201526000610b6d60a0830186610ae9565b6001600160a01b0394909416606083015250608001529392505050565b60008219821115610b9d57610b9d610cf6565b500190565b600082610bbf57634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115610bff578160001904821115610be557610be5610cf6565b80851615610bf257918102915b93841c9390800290610bc9565b509250929050565b6000610aa660ff841683600082610c2057506001610cae565b81610c2d57506000610cae565b8160018114610c435760028114610c4d57610c69565b6001915050610cae565b60ff841115610c5e57610c5e610cf6565b50506001821b610cae565b5060208310610133831016604e8410600b8410161715610c8c575081810a610cae565b610c968383610bc4565b8060001904821115610caa57610caa610cf6565b0290505b92915050565b6000816000190483118215151615610cce57610cce610cf6565b500290565b600060ff821660ff841680821015610ced57610ced610cf6565b90039392505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610d4d57600080fd5b5056fea26469706673582212203ab2b58e38373ae701608bc1ef4e3096de9e805d4063faeff1bc786d95e4db4064736f6c634300080600335a65726f2061646472657373206e6f7420616c6c6f7765640000000000000000",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806311eac8551461005157806362ac753814610080578063c31c9c0714610095578063d72887f5146100a8575b600080fd5b600154610064906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61009361008e36600461095b565b6100bb565b005b600054610064906001600160a01b031681565b600254610064906001600160a01b031681565b6001546001600160a01b0385811691161480156100e557506002546001600160a01b038381169116145b8061011557506002546001600160a01b03858116911614801561011557506001546001600160a01b038381169116145b6101825760405162461bcd60e51b815260206004820152603360248201527f574d617469633255736463546f6b656e45786368616e67653a20536f6d6520746044820152726f6b656e206e6f7420636f6d70617469626c6560681b60648201526084015b60405180910390fd5b8061028c576040516370a0823160e01b81523060048201526001600160a01b0385169063a9059cbb90879083906370a082319060240160206040518083038186803b1580156101d057600080fd5b505afa1580156101e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102089190610aad565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561024e57600080fd5b505af1158015610262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102869190610a84565b50610954565b6001546001600160a01b0385811691161480156102b657506002546001600160a01b038381169116145b156103295760405162461bcd60e51b815260206004820152603e60248201527f574d617469633255736463546f6b656e45786368616e67653a20416c6c6f776560448201527f64206f6e6c792065786368616e676520774d6174696320746f205553444300006064820152608401610179565b6002546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561036e57600080fd5b505afa158015610382573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a69190610ac6565b6103b1906012610cd3565b6103bc90600a610c07565b90506103c88183610ba2565b6002546040516370a0823160e01b815230600482015291935083916001600160a01b03909116906370a082319060240160206040518083038186803b15801561041057600080fd5b505afa158015610424573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104489190610aad565b10156104af5760405162461bcd60e51b815260206004820152603060248201527f574d617469633255736463546f6b656e45786368616e67653a204e6f7420656e60448201526f37bab3b4103ba6b0ba34b1aa37b5b2b760811b6064820152608401610179565b816105ba576040516370a0823160e01b81523060048201526001600160a01b0386169063a9059cbb90889083906370a082319060240160206040518083038186803b1580156104fd57600080fd5b505afa158015610511573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105359190610aad565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561057b57600080fd5b505af115801561058f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b39190610a84565b5050610954565b604080516002808252606082018352600092602083019080368337505060025482519293506001600160a01b0316918391506000906105fb576105fb610d0c565b6001600160a01b039283166020918202929092010152600180548351921691839190811061062b5761062b610d0c565b6001600160a01b0392831660209182029290920101526000805460405163d06ca61f60e01b81529192169063d06ca61f9061066c9087908690600401610b2d565b60006040518083038186803b15801561068457600080fd5b505afa158015610698573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106c091908101906109bf565b90506000816000815181106106d7576106d7610d0c565b6020026020010151826001815181106106f2576106f2610d0c565b6020026020010151670de0b6b3a764000061070d9190610cb4565b6107179190610ba2565b9050600381101561082b576040516370a0823160e01b81523060048201526001600160a01b0389169063a9059cbb908b9083906370a082319060240160206040518083038186803b15801561076b57600080fd5b505afa15801561077f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a39190610aad565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156107e957600080fd5b505af11580156107fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108219190610a84565b5050505050610954565b60025460005460405163095ea7b360e01b81526001600160a01b0391821660048201526024810188905291169063095ea7b390604401602060405180830381600087803b15801561087b57600080fd5b505af115801561088f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b39190610a84565b50600080546001600160a01b0316906338ed1739908790868b6108d842610258610b8a565b6040518663ffffffff1660e01b81526004016108f8959493929190610b4e565b600060405180830381600087803b15801561091257600080fd5b505af1158015610926573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261094e91908101906109bf565b50505050505b5050505050565b600080600080600060a0868803121561097357600080fd5b853561097e81610d38565b9450602086013561098e81610d38565b9350604086013561099e81610d38565b925060608601356109ae81610d38565b949793965091946080013592915050565b600060208083850312156109d257600080fd5b825167ffffffffffffffff808211156109ea57600080fd5b818501915085601f8301126109fe57600080fd5b815181811115610a1057610a10610d22565b8060051b604051601f19603f83011681018181108582111715610a3557610a35610d22565b604052828152858101935084860182860187018a1015610a5457600080fd5b600095505b83861015610a77578051855260019590950194938601938601610a59565b5098975050505050505050565b600060208284031215610a9657600080fd5b81518015158114610aa657600080fd5b9392505050565b600060208284031215610abf57600080fd5b5051919050565b600060208284031215610ad857600080fd5b815160ff81168114610aa657600080fd5b600081518084526020808501945080840160005b83811015610b225781516001600160a01b031687529582019590820190600101610afd565b509495945050505050565b828152604060208201526000610b466040830184610ae9565b949350505050565b85815284602082015260a060408201526000610b6d60a0830186610ae9565b6001600160a01b0394909416606083015250608001529392505050565b60008219821115610b9d57610b9d610cf6565b500190565b600082610bbf57634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115610bff578160001904821115610be557610be5610cf6565b80851615610bf257918102915b93841c9390800290610bc9565b509250929050565b6000610aa660ff841683600082610c2057506001610cae565b81610c2d57506000610cae565b8160018114610c435760028114610c4d57610c69565b6001915050610cae565b60ff841115610c5e57610c5e610cf6565b50506001821b610cae565b5060208310610133831016604e8410600b8410161715610c8c575081810a610cae565b610c968383610bc4565b8060001904821115610caa57610caa610cf6565b0290505b92915050565b6000816000190483118215151615610cce57610cce610cf6565b500290565b600060ff821660ff841680821015610ced57610ced610cf6565b90039392505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610d4d57600080fd5b5056fea26469706673582212203ab2b58e38373ae701608bc1ef4e3096de9e805d4063faeff1bc786d95e4db4064736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12498,
        "contract": "contracts/token_exchanges/WMatic2UsdcTokenExchange.sol:WMatic2UsdcTokenExchange",
        "label": "swapRouter",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IUniswapV2Router02)9733"
      },
      {
        "astId": 12501,
        "contract": "contracts/token_exchanges/WMatic2UsdcTokenExchange.sol:WMatic2UsdcTokenExchange",
        "label": "usdcToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)1095"
      },
      {
        "astId": 12504,
        "contract": "contracts/token_exchanges/WMatic2UsdcTokenExchange.sol:WMatic2UsdcTokenExchange",
        "label": "wMaticToken",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)1095"
      }
    ],
    "types": {
      "t_contract(IERC20)1095": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IUniswapV2Router02)9733": {
        "encoding": "inplace",
        "label": "contract IUniswapV2Router02",
        "numberOfBytes": "20"
      }
    }
  }
}