{
  "address": "0x70e754531418461eF2366b72cd396337d2AD6D5d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addrActive2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x80d3eb604bfab4e360a09527d1f7e76a826ad8f796b2c2a2c91f768bfae6b0f0",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x70e754531418461eF2366b72cd396337d2AD6D5d",
    "transactionIndex": 0,
    "gasUsed": "336244",
    "logsBloom": "0x
    "blockHash": "0x0d330db5ea72546594722952d5f0d1057eaad6eba5e68082c7d162e4a7642c20",
    "transactionHash": "0x80d3eb604bfab4e360a09527d1f7e76a826ad8f796b2c2a2c91f768bfae6b0f0",
    "logs": [],
    "blockNumber": 21675053,
    "cumulativeGasUsed": "336244",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "4b2c02ad00a20f5dc92f2cdd9d4eb77f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addrActive2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tests/BuyonSwap.sol\":\"BuyonSwap\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/connectors/swaps/interfaces/IUniswapV2Router01.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    \\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n \\n\\n}\\n\",\"keccak256\":\"0xbb39ec76d795136f5b13485e889d211527ae5af119ab32699337ed793b1d84f7\"},\"contracts/connectors/swaps/interfaces/IUniswapV2Router02.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\nimport './IUniswapV2Router01.sol';\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountETH);\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountETH);\\n    \\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable;\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n\\n    function pairFor(address factoryC, address tokenA, address tokenB) external view returns (address pair) ;\\n\\n}\\n\",\"keccak256\":\"0xdcd670f2feb6b5541bd0666675369b1fe2808c9a0ab10b88a7e0b487c156a856\"},\"contracts/tests/BuyonSwap.sol\":{\"content\":\"pragma solidity >=0.8.0 <0.9.0;\\nimport \\\"../connectors/swaps/interfaces/IUniswapV2Router02.sol\\\";\\n\\ncontract BuyonSwap {\\n    function buy(address _addrActive2, address _router) public payable {\\n        IUniswapV2Router02 r2 = IUniswapV2Router02(_router);\\n        uint[] memory amountRet;\\n\\n        address[] memory path = new address[](2);\\n        path[0] = r2.WETH();\\n        path[1] = _addrActive2;\\n        amountRet = r2.getAmountsOut(msg.value, path);\\n\\n        amountRet = r2.swapExactETHForTokens{value: msg.value}(\\n            (amountRet[1] * 9) / 10,\\n            path,\\n            msg.sender,\\n            block.timestamp + 600\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x87f23dcf74ffe410fcb4eb13edf3cd9783a16d14888bfa3800d1c08dc89ed709\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061051f806100206000396000f3fe60806040526004361061001e5760003560e01c8063ad7fadc514610023575b600080fd5b61003661003136600461029e565b610038565b005b6040805160028082526060828101909352839291600091816020016020820280368337019050509050826001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561009a57600080fd5b505afa1580156100ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d2919061027a565b816000815181106100e5576100e56104a5565b60200260200101906001600160a01b031690816001600160a01b0316815250508481600181518110610119576101196104a5565b6001600160a01b03928316602091820292909201015260405163d06ca61f60e01b81529084169063d06ca61f9061015690349085906004016103e0565b60006040518083038186803b15801561016e57600080fd5b505afa158015610182573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101aa91908101906102d7565b9150826001600160a01b0316637ff36ab534600a856001815181106101d1576101d16104a5565b602002602001015160096101e59190610470565b6101ef919061044e565b84336101fd42610258610436565b6040518663ffffffff1660e01b815260040161021c9493929190610401565b6000604051808303818588803b15801561023557600080fd5b505af1158015610249573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405261027291908101906102d7565b505050505050565b60006020828403121561028c57600080fd5b8151610297816104d1565b9392505050565b600080604083850312156102b157600080fd5b82356102bc816104d1565b915060208301356102cc816104d1565b809150509250929050565b600060208083850312156102ea57600080fd5b825167ffffffffffffffff8082111561030257600080fd5b818501915085601f83011261031657600080fd5b815181811115610328576103286104bb565b8060051b604051601f19603f8301168101818110858211171561034d5761034d6104bb565b604052828152858101935084860182860187018a101561036c57600080fd5b600095505b8386101561038f578051855260019590950194938601938601610371565b5098975050505050505050565b600081518084526020808501945080840160005b838110156103d55781516001600160a01b0316875295820195908201906001016103b0565b509495945050505050565b8281526040602082015260006103f9604083018461039c565b949350505050565b84815260806020820152600061041a608083018661039c565b6001600160a01b03949094166040830152506060015292915050565b600082198211156104495761044961048f565b500190565b60008261046b57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561048a5761048a61048f565b500290565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146104e657600080fd5b5056fea26469706673582212209ed1aad908fd39044fb6cd0180cbd7e534473a8985ec8d095ab94c46d536aff164736f6c63430008060033",
  "deployedBytecode": "0x60806040526004361061001e5760003560e01c8063ad7fadc514610023575b600080fd5b61003661003136600461029e565b610038565b005b6040805160028082526060828101909352839291600091816020016020820280368337019050509050826001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561009a57600080fd5b505afa1580156100ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d2919061027a565b816000815181106100e5576100e56104a5565b60200260200101906001600160a01b031690816001600160a01b0316815250508481600181518110610119576101196104a5565b6001600160a01b03928316602091820292909201015260405163d06ca61f60e01b81529084169063d06ca61f9061015690349085906004016103e0565b60006040518083038186803b15801561016e57600080fd5b505afa158015610182573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101aa91908101906102d7565b9150826001600160a01b0316637ff36ab534600a856001815181106101d1576101d16104a5565b602002602001015160096101e59190610470565b6101ef919061044e565b84336101fd42610258610436565b6040518663ffffffff1660e01b815260040161021c9493929190610401565b6000604051808303818588803b15801561023557600080fd5b505af1158015610249573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405261027291908101906102d7565b505050505050565b60006020828403121561028c57600080fd5b8151610297816104d1565b9392505050565b600080604083850312156102b157600080fd5b82356102bc816104d1565b915060208301356102cc816104d1565b809150509250929050565b600060208083850312156102ea57600080fd5b825167ffffffffffffffff8082111561030257600080fd5b818501915085601f83011261031657600080fd5b815181811115610328576103286104bb565b8060051b604051601f19603f8301168101818110858211171561034d5761034d6104bb565b604052828152858101935084860182860187018a101561036c57600080fd5b600095505b8386101561038f578051855260019590950194938601938601610371565b5098975050505050505050565b600081518084526020808501945080840160005b838110156103d55781516001600160a01b0316875295820195908201906001016103b0565b509495945050505050565b8281526040602082015260006103f9604083018461039c565b949350505050565b84815260806020820152600061041a608083018661039c565b6001600160a01b03949094166040830152506060015292915050565b600082198211156104495761044961048f565b500190565b60008261046b57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561048a5761048a61048f565b500290565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146104e657600080fd5b5056fea26469706673582212209ed1aad908fd39044fb6cd0180cbd7e534473a8985ec8d095ab94c46d536aff164736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}